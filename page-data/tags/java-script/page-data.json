{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx",
    "path": "/tags/java-script",
    "result": {"data":{"allPost":{"nodes":[{"slug":"/leveraging-the-query-function-context","title":"Leveraging the Query Function Context","date":"26.10.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #3: React Query Render Optimizations #4: Status Checks in React Query #…","timeToRead":5,"description":"Use what React Query provides for optimal type safety","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/mastering-mutations-in-react-query","title":"Mastering Mutations in React Query","date":"09.10.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #3: React Query Render Optimizations #4: Status Checks in React Query #…","timeToRead":7,"description":"Learn all about the concept of performing side effects on the server with React Query.","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/react-query-error-handling","title":"React Query Error Handling","date":"10.09.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #3: React Query Render Optimizations #4: Status Checks in React Query #…","timeToRead":4,"description":"After covering the sunshine cases of data fetching, it's time to look at situations where things don't go as planned and \"Something went wrong...\"","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/react-query-as-a-state-manager","title":"React Query as a State Manager","date":"20.08.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #3: React Query Render Optimizations #4: Status Checks in React Query #…","timeToRead":7,"description":"Everything you need to know to make React Query your single source of truth state manager for your async state","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/placeholder-and-initial-data-in-react-query","title":"Placeholder and Initial Data in React Query","date":"09.08.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #3: React Query Render Optimizations #4: Status Checks in React Query #…","timeToRead":4,"description":"Learn about the different possibilities to avoid loading spinners in React Query.","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/about-async-functions","title":"About async functions","date":"23.07.2021","excerpt":"Async functions  are great, especially if you have to call multiple functions in a row that return promises. With async / await, code…","timeToRead":3,"description":"A deep dive into async functions and how they are different from promise chaining","tags":[{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/effective-react-query-keys","title":"Effective React Query Keys","date":"13.06.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #3: React Query Render Optimizations #4: Status Checks in React Query #…","timeToRead":4,"description":"Learn how to structure React Query Keys effectively as your App grows","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/using-web-sockets-with-react-query","title":"Using WebSockets with React Query","date":"06.06.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #3: React Query Render Optimizations #4: Status Checks in React Query #…","timeToRead":4,"description":"A step-by-step guide on how to make real-time notifications work with react-query","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/testing-react-query","title":"Testing React Query","date":"04.04.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #3: React Query Render Optimizations #4: Status Checks in React Query #…","timeToRead":4,"description":"Let's take a look at how to efficiently test custom useQuery hooks and components using them.","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/status-checks-in-react-query","title":"Status Checks in React Query","date":"27.03.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #3: React Query Render Optimizations #5: Testing React Query #6: React Query…","timeToRead":3,"description":"How the wrong status check order can negatively impact user experience","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/react-query-render-optimizations","title":"React Query Render Optimizations","date":"20.03.2021","excerpt":"#1: Practical React Query #2: React Query Data Transformations #4: Status Checks in React Query #5: Testing React Query #6: React Query and…","timeToRead":4,"description":"An advanced guide to minimize component re-renderings when using React Query","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/react-query-data-transformations","title":"React Query Data Transformations","date":"10.03.2021","excerpt":"#1: Practical React Query #3: React Query Render Optimizations #4: Status Checks in React Query #5: Testing React Query #6: React Query and…","timeToRead":4,"description":"Learn the possibilities to perform the quite common and important task of transforming your data with react-query","tags":[{"name":"react","slug":"react"},{"name":"react-query","slug":"react-query"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/no-love-for-boolean-parameters","title":"No love for boolean parameters","date":"28.02.2021","excerpt":"Ah, booleans. 0 or 1, true or false. Always either one of them, never something in between. So simple and predictable. At the end of the day…","timeToRead":3,"description":"Innocent looking boolean parameters, or flags, are often the reason for hard to maintain legacy code. Resist the urge of adding them!","tags":[{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"},{"name":"React","slug":"react"}]},{"slug":"/things-to-know-about-use-state","title":"Things to know about useState","date":"13.02.2021","excerpt":"#1: Don't over useState #2: Putting props to useState #4: useState for one-time initializations #5: useState vs. useReducer React.useState…","timeToRead":3,"description":"5 things everyone needs to know about useState","tags":[{"name":"React","slug":"react"},{"name":"useState pitfalls","slug":"use-state-pitfalls"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/simplifying-use-effect","title":"Simplifying useEffect","date":"23.01.2021","excerpt":"useEffect . The hook everybody needs, but nobody wants. According to the official react docs, it's \" an escape hatch from React’s purely…","timeToRead":4,"description":"useEffect hooks can be hard to reason about, but I have 5 principles that can help to manage them","tags":[{"name":"React","slug":"react"},{"name":"useEffect","slug":"use-effect"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/flow-to-type-script-migration-journey","title":"Flow to TypeScript migration journey","date":"04.01.2021","excerpt":"It's the end of 2020, and it's hard to imagine frontend development without static types. It is very convenient to start a project without…","timeToRead":6,"description":"How we migrated over 100k lines of code from Flow to TypeScript. A Journey.","tags":[{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"},{"name":"Flow","slug":"flow"},{"name":"ReactJs","slug":"react-js"}]},{"slug":"/on-naming-things","title":"On naming things","date":"08.12.2020","excerpt":"There are only two hard things in Computer Science: cache invalidation, naming things, and off-by-one errors. Out of those two and a half…","timeToRead":5,"description":"Naming is hard. Naming is subjective. Yet there are some things we can objectively do when it comes to finding proper names.","tags":[{"name":"principles","slug":"principles"},{"name":"React","slug":"react"},{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"}]},{"slug":"/why-i-dont-like-reduce","title":"Why I don't like reduce","date":"09.09.2020","excerpt":"The popular  eslint-plugin-unicorn  recently added a\n no-reduce  rule, and it is set to  error  per default.\nThe argument is that Array…","timeToRead":3,"description":"If you know me, you know I'm no fan of Array.reduce. I'll explain why in detail in this post.","tags":[{"name":"JavaScript","slug":"java-script"},{"name":"TypeScript","slug":"type-script"},{"name":"Array","slug":"array"},{"name":"reduce","slug":"reduce"}]},{"slug":"/calling-java-script-from-type-script","title":"Calling JavaScript from TypeScript","date":"04.09.2020","excerpt":"There is nothing better than starting a new project, on a green field.\nYou can choose all the latest tech you want, and you can begin with…","timeToRead":3,"description":"Gradually migrating from JS to TS is not without difficulties - here are some tricks to smoothen the interoperability","tags":[{"name":"TypeScript","slug":"type-script"},{"name":"JavaScript","slug":"java-script"},{"name":"JsDoc","slug":"js-doc"}]}]}},"pageContext":{"slug":"java-script","name":"JavaScript","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}